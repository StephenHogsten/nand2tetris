// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
        // initialize OS modules (Array and String don't need to)
        do Memory.init();
        do Math.init();
        do Output.init();
        do Screen.init();
        do Keyboard.init();

        // call the entry point (assumed to exist)
        do Main.main();

        do Sys.halt();
        return;
    }

    /** Halts the program execution. */
    function void halt() {
        // "halts" by entering infitine loop
        while (true) {
        }
        return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    // *SSH timing this is so stupid, I'm just going to leave it the way it is, 2000 takes about 1600, but it's not a direct relationship with the loop
    function void wait(int duration) {
        var int oneMs;
        var int ms;
        var int i;

        let oneMs = 450;
        let ms = 0;
        while (ms < duration) {
            let i = 0;
            while (i < oneMs) {
                let i = i + 1;
            }
            let ms = ms + 1;
        }
        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
        var String s;

        let s = String.new(5);
        do s.setInt(errorCode);
        do Output.moveCursor(0, 0);
        do Output.printString("ERR");
        do Output.printString(s);

        do Sys.halt();
        return;
    }
}
