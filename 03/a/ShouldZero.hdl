CHIP ShouldZero {
  IN 
    in[16],
    should;
  OUT
    out[16];
  PARTS:
    Not(in=should, out=notzero);
    And(a=in[0], b=notzero, out=out[0]);
    And(a=in[1], b=notzero, out=out[1]);
    And(a=in[2], b=notzero, out=out[2]);
    And(a=in[3], b=notzero, out=out[3]);
    And(a=in[4], b=notzero, out=out[4]);
    And(a=in[5], b=notzero, out=out[5]);
    And(a=in[6], b=notzero, out=out[6]);
    And(a=in[7], b=notzero, out=out[7]);
    And(a=in[8], b=notzero, out=out[8]);
    And(a=in[9], b=notzero, out=out[9]);
    And(a=in[10], b=notzero, out=out[10]);
    And(a=in[11], b=notzero, out=out[11]);
    And(a=in[12], b=notzero, out=out[12]);
    And(a=in[13], b=notzero, out=out[13]);
    And(a=in[14], b=notzero, out=out[14]);
    And(a=in[15], b=notzero, out=out[15]);
}